openapi: "3.0.0"
info:
  title: Approval Service
  description: Simple approval system for payment
  version: 0.1.0
servers:
  - url: "http://localhost:8081"
paths:
  /payments:
    post:
      summary: Create payment
      operationId: createPayment
      requestBody:
        description: Create payment request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaymentRequest"
      responses:
        "200":
          description: Created Payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: List payments
      operationId: listPayments
      parameters:
        - name: statuses
          in: query
          description: The list of statuses for filtering. if not specified, it will include all statuses.
          required: false
          explode: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PaymentStatus"
        - name: before_create_timestamp
          in: query
          description: Query the payments before the create timestamp. if not specified, it will use current timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: page_token
          in: query
          description: Request a specific page for a list of payments
          required: false
          schema:
            type: string
        - name: page_size
          in: query
          description: Specify the maximum number of payments for a page
          required: false
          schema:
            type: integer
            default: 50
      responses:
        "200":
          description: List of payments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPaymentsResponse"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  "/payments/{paymentID}":
    get:
      summary: Get payment by id
      operationId: getPaymentByID
      parameters:
        - name: paymentID
          in: path
          description: ID of payment
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Payment response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /payments/{paymentID}/reviews:
    post:
      summary: Create review for payment
      operationId: createPaymentReview
      parameters:
        - name: paymentID
          in: path
          description: ID of payment
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create review request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReviewRequest"
      responses:
        "204":
          description: Review to be created
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Payment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        request_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            name: uuid
            path: github.com/google/uuid
        status:
          $ref: "#/components/schemas/PaymentStatus"
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/Review"
        remark:
          type: string
        create_time:
          type: string
          format: date-time
        update_time:
          type: string
          format: date-time
      required:
        - id
        - request_id
        - status
        - reviews
        - create_time
        - update_time
    PaymentStatus:
      type: string
      enum:
        - PENDING
        - APPROVED
        - REJECTED
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
        event:
          $ref: "#/components/schemas/ReviewEvent"
        reviewer_id:
          type: string
        comment:
          type: string
        create_time:
          type: string
          format: date-time
        update_time:
          type: string
          format: date-time
      required:
        - id
        - event
        - reviewer_id
        - create_time
        - update_time
    ReviewEvent:
      type: string
      enum:
        - APPROVE
        - REJECT
    CreatePaymentRequest:
      type: object
      properties:
        request_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            name: uuid
            path: github.com/google/uuid
      required:
        - request_id
    CreateReviewRequest:
      type: object
      properties:
        event:
          $ref: "#/components/schemas/ReviewEvent"
        reviewer_id:
          type: string
        comment:
          type: string
      required:
        - event
        - reviewer_id
    ListPaymentsResponse:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
        next_page_token:
          type: string
      required:
        - payments
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message
